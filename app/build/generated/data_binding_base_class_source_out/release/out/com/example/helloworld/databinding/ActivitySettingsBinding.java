// Generated by view binder compiler. Do not edit!
package com.example.helloworld.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.SeekBar;
import android.widget.Spinner;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.helloworld.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Switch autoSaveSwitch;

  @NonNull
  public final MaterialButton backButton;

  @NonNull
  public final SeekBar brightnessSlider;

  @NonNull
  public final Switch darkModeSwitch;

  @NonNull
  public final View headerBackground;

  @NonNull
  public final Spinner languageSpinner;

  @NonNull
  public final Switch notificationsSwitch;

  @NonNull
  public final MaterialButton resetButton;

  @NonNull
  public final MaterialButton saveButton;

  @NonNull
  public final LinearLayout settingsSection;

  @NonNull
  public final Switch soundEffectsSwitch;

  @NonNull
  public final MaterialCardView statusCard;

  @NonNull
  public final TextView statusTextView;

  @NonNull
  public final TextView subtitleTextView;

  @NonNull
  public final Spinner themeSpinner;

  @NonNull
  public final TextView titleTextView;

  @NonNull
  public final Switch vibrationSwitch;

  @NonNull
  public final SeekBar volumeSlider;

  private ActivitySettingsBinding(@NonNull ScrollView rootView, @NonNull Switch autoSaveSwitch,
      @NonNull MaterialButton backButton, @NonNull SeekBar brightnessSlider,
      @NonNull Switch darkModeSwitch, @NonNull View headerBackground,
      @NonNull Spinner languageSpinner, @NonNull Switch notificationsSwitch,
      @NonNull MaterialButton resetButton, @NonNull MaterialButton saveButton,
      @NonNull LinearLayout settingsSection, @NonNull Switch soundEffectsSwitch,
      @NonNull MaterialCardView statusCard, @NonNull TextView statusTextView,
      @NonNull TextView subtitleTextView, @NonNull Spinner themeSpinner,
      @NonNull TextView titleTextView, @NonNull Switch vibrationSwitch,
      @NonNull SeekBar volumeSlider) {
    this.rootView = rootView;
    this.autoSaveSwitch = autoSaveSwitch;
    this.backButton = backButton;
    this.brightnessSlider = brightnessSlider;
    this.darkModeSwitch = darkModeSwitch;
    this.headerBackground = headerBackground;
    this.languageSpinner = languageSpinner;
    this.notificationsSwitch = notificationsSwitch;
    this.resetButton = resetButton;
    this.saveButton = saveButton;
    this.settingsSection = settingsSection;
    this.soundEffectsSwitch = soundEffectsSwitch;
    this.statusCard = statusCard;
    this.statusTextView = statusTextView;
    this.subtitleTextView = subtitleTextView;
    this.themeSpinner = themeSpinner;
    this.titleTextView = titleTextView;
    this.vibrationSwitch = vibrationSwitch;
    this.volumeSlider = volumeSlider;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.autoSaveSwitch;
      Switch autoSaveSwitch = ViewBindings.findChildViewById(rootView, id);
      if (autoSaveSwitch == null) {
        break missingId;
      }

      id = R.id.backButton;
      MaterialButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.brightnessSlider;
      SeekBar brightnessSlider = ViewBindings.findChildViewById(rootView, id);
      if (brightnessSlider == null) {
        break missingId;
      }

      id = R.id.darkModeSwitch;
      Switch darkModeSwitch = ViewBindings.findChildViewById(rootView, id);
      if (darkModeSwitch == null) {
        break missingId;
      }

      id = R.id.headerBackground;
      View headerBackground = ViewBindings.findChildViewById(rootView, id);
      if (headerBackground == null) {
        break missingId;
      }

      id = R.id.languageSpinner;
      Spinner languageSpinner = ViewBindings.findChildViewById(rootView, id);
      if (languageSpinner == null) {
        break missingId;
      }

      id = R.id.notificationsSwitch;
      Switch notificationsSwitch = ViewBindings.findChildViewById(rootView, id);
      if (notificationsSwitch == null) {
        break missingId;
      }

      id = R.id.resetButton;
      MaterialButton resetButton = ViewBindings.findChildViewById(rootView, id);
      if (resetButton == null) {
        break missingId;
      }

      id = R.id.saveButton;
      MaterialButton saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.settingsSection;
      LinearLayout settingsSection = ViewBindings.findChildViewById(rootView, id);
      if (settingsSection == null) {
        break missingId;
      }

      id = R.id.soundEffectsSwitch;
      Switch soundEffectsSwitch = ViewBindings.findChildViewById(rootView, id);
      if (soundEffectsSwitch == null) {
        break missingId;
      }

      id = R.id.statusCard;
      MaterialCardView statusCard = ViewBindings.findChildViewById(rootView, id);
      if (statusCard == null) {
        break missingId;
      }

      id = R.id.statusTextView;
      TextView statusTextView = ViewBindings.findChildViewById(rootView, id);
      if (statusTextView == null) {
        break missingId;
      }

      id = R.id.subtitleTextView;
      TextView subtitleTextView = ViewBindings.findChildViewById(rootView, id);
      if (subtitleTextView == null) {
        break missingId;
      }

      id = R.id.themeSpinner;
      Spinner themeSpinner = ViewBindings.findChildViewById(rootView, id);
      if (themeSpinner == null) {
        break missingId;
      }

      id = R.id.titleTextView;
      TextView titleTextView = ViewBindings.findChildViewById(rootView, id);
      if (titleTextView == null) {
        break missingId;
      }

      id = R.id.vibrationSwitch;
      Switch vibrationSwitch = ViewBindings.findChildViewById(rootView, id);
      if (vibrationSwitch == null) {
        break missingId;
      }

      id = R.id.volumeSlider;
      SeekBar volumeSlider = ViewBindings.findChildViewById(rootView, id);
      if (volumeSlider == null) {
        break missingId;
      }

      return new ActivitySettingsBinding((ScrollView) rootView, autoSaveSwitch, backButton,
          brightnessSlider, darkModeSwitch, headerBackground, languageSpinner, notificationsSwitch,
          resetButton, saveButton, settingsSection, soundEffectsSwitch, statusCard, statusTextView,
          subtitleTextView, themeSpinner, titleTextView, vibrationSwitch, volumeSlider);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
