// Generated by view binder compiler. Do not edit!
package com.example.helloworld.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.helloworld.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHitApisBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView apiKeyTextView;

  @NonNull
  public final MaterialButton backButton;

  @NonNull
  public final MaterialCardView dioCard;

  @NonNull
  public final MaterialButton dioGetFailButton;

  @NonNull
  public final MaterialButton dioGetSuccessButton;

  @NonNull
  public final MaterialButton dioPostFailButton;

  @NonNull
  public final MaterialButton dioPostSuccessButton;

  @NonNull
  public final TextView dioSectionTitle;

  @NonNull
  public final MaterialCardView graphqlCard;

  @NonNull
  public final MaterialButton graphqlGetFailButton;

  @NonNull
  public final MaterialButton graphqlGetSuccessButton;

  @NonNull
  public final MaterialButton graphqlPostFailButton;

  @NonNull
  public final MaterialButton graphqlPostSuccessButton;

  @NonNull
  public final TextView graphqlSectionTitle;

  @NonNull
  public final View headerBackground;

  @NonNull
  public final MaterialCardView httpCard;

  @NonNull
  public final MaterialButton httpGetFailButton;

  @NonNull
  public final MaterialButton httpGetSuccessButton;

  @NonNull
  public final MaterialButton httpPostFailButton;

  @NonNull
  public final MaterialButton httpPostSuccessButton;

  @NonNull
  public final TextView httpSectionTitle;

  @NonNull
  public final MaterialCardView multipartCard;

  @NonNull
  public final MaterialButton multipartGetFailButton;

  @NonNull
  public final MaterialButton multipartGetSuccessButton;

  @NonNull
  public final MaterialButton multipartPostFailButton;

  @NonNull
  public final MaterialButton multipartPostSuccessButton;

  @NonNull
  public final TextView multipartSectionTitle;

  @NonNull
  public final MaterialCardView statusCard;

  @NonNull
  public final TextView statusTextView;

  @NonNull
  public final TextView titleTextView;

  private ActivityHitApisBinding(@NonNull ScrollView rootView, @NonNull TextView apiKeyTextView,
      @NonNull MaterialButton backButton, @NonNull MaterialCardView dioCard,
      @NonNull MaterialButton dioGetFailButton, @NonNull MaterialButton dioGetSuccessButton,
      @NonNull MaterialButton dioPostFailButton, @NonNull MaterialButton dioPostSuccessButton,
      @NonNull TextView dioSectionTitle, @NonNull MaterialCardView graphqlCard,
      @NonNull MaterialButton graphqlGetFailButton, @NonNull MaterialButton graphqlGetSuccessButton,
      @NonNull MaterialButton graphqlPostFailButton,
      @NonNull MaterialButton graphqlPostSuccessButton, @NonNull TextView graphqlSectionTitle,
      @NonNull View headerBackground, @NonNull MaterialCardView httpCard,
      @NonNull MaterialButton httpGetFailButton, @NonNull MaterialButton httpGetSuccessButton,
      @NonNull MaterialButton httpPostFailButton, @NonNull MaterialButton httpPostSuccessButton,
      @NonNull TextView httpSectionTitle, @NonNull MaterialCardView multipartCard,
      @NonNull MaterialButton multipartGetFailButton,
      @NonNull MaterialButton multipartGetSuccessButton,
      @NonNull MaterialButton multipartPostFailButton,
      @NonNull MaterialButton multipartPostSuccessButton, @NonNull TextView multipartSectionTitle,
      @NonNull MaterialCardView statusCard, @NonNull TextView statusTextView,
      @NonNull TextView titleTextView) {
    this.rootView = rootView;
    this.apiKeyTextView = apiKeyTextView;
    this.backButton = backButton;
    this.dioCard = dioCard;
    this.dioGetFailButton = dioGetFailButton;
    this.dioGetSuccessButton = dioGetSuccessButton;
    this.dioPostFailButton = dioPostFailButton;
    this.dioPostSuccessButton = dioPostSuccessButton;
    this.dioSectionTitle = dioSectionTitle;
    this.graphqlCard = graphqlCard;
    this.graphqlGetFailButton = graphqlGetFailButton;
    this.graphqlGetSuccessButton = graphqlGetSuccessButton;
    this.graphqlPostFailButton = graphqlPostFailButton;
    this.graphqlPostSuccessButton = graphqlPostSuccessButton;
    this.graphqlSectionTitle = graphqlSectionTitle;
    this.headerBackground = headerBackground;
    this.httpCard = httpCard;
    this.httpGetFailButton = httpGetFailButton;
    this.httpGetSuccessButton = httpGetSuccessButton;
    this.httpPostFailButton = httpPostFailButton;
    this.httpPostSuccessButton = httpPostSuccessButton;
    this.httpSectionTitle = httpSectionTitle;
    this.multipartCard = multipartCard;
    this.multipartGetFailButton = multipartGetFailButton;
    this.multipartGetSuccessButton = multipartGetSuccessButton;
    this.multipartPostFailButton = multipartPostFailButton;
    this.multipartPostSuccessButton = multipartPostSuccessButton;
    this.multipartSectionTitle = multipartSectionTitle;
    this.statusCard = statusCard;
    this.statusTextView = statusTextView;
    this.titleTextView = titleTextView;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHitApisBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHitApisBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_hit_apis, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHitApisBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.apiKeyTextView;
      TextView apiKeyTextView = ViewBindings.findChildViewById(rootView, id);
      if (apiKeyTextView == null) {
        break missingId;
      }

      id = R.id.backButton;
      MaterialButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.dioCard;
      MaterialCardView dioCard = ViewBindings.findChildViewById(rootView, id);
      if (dioCard == null) {
        break missingId;
      }

      id = R.id.dioGetFailButton;
      MaterialButton dioGetFailButton = ViewBindings.findChildViewById(rootView, id);
      if (dioGetFailButton == null) {
        break missingId;
      }

      id = R.id.dioGetSuccessButton;
      MaterialButton dioGetSuccessButton = ViewBindings.findChildViewById(rootView, id);
      if (dioGetSuccessButton == null) {
        break missingId;
      }

      id = R.id.dioPostFailButton;
      MaterialButton dioPostFailButton = ViewBindings.findChildViewById(rootView, id);
      if (dioPostFailButton == null) {
        break missingId;
      }

      id = R.id.dioPostSuccessButton;
      MaterialButton dioPostSuccessButton = ViewBindings.findChildViewById(rootView, id);
      if (dioPostSuccessButton == null) {
        break missingId;
      }

      id = R.id.dioSectionTitle;
      TextView dioSectionTitle = ViewBindings.findChildViewById(rootView, id);
      if (dioSectionTitle == null) {
        break missingId;
      }

      id = R.id.graphqlCard;
      MaterialCardView graphqlCard = ViewBindings.findChildViewById(rootView, id);
      if (graphqlCard == null) {
        break missingId;
      }

      id = R.id.graphqlGetFailButton;
      MaterialButton graphqlGetFailButton = ViewBindings.findChildViewById(rootView, id);
      if (graphqlGetFailButton == null) {
        break missingId;
      }

      id = R.id.graphqlGetSuccessButton;
      MaterialButton graphqlGetSuccessButton = ViewBindings.findChildViewById(rootView, id);
      if (graphqlGetSuccessButton == null) {
        break missingId;
      }

      id = R.id.graphqlPostFailButton;
      MaterialButton graphqlPostFailButton = ViewBindings.findChildViewById(rootView, id);
      if (graphqlPostFailButton == null) {
        break missingId;
      }

      id = R.id.graphqlPostSuccessButton;
      MaterialButton graphqlPostSuccessButton = ViewBindings.findChildViewById(rootView, id);
      if (graphqlPostSuccessButton == null) {
        break missingId;
      }

      id = R.id.graphqlSectionTitle;
      TextView graphqlSectionTitle = ViewBindings.findChildViewById(rootView, id);
      if (graphqlSectionTitle == null) {
        break missingId;
      }

      id = R.id.headerBackground;
      View headerBackground = ViewBindings.findChildViewById(rootView, id);
      if (headerBackground == null) {
        break missingId;
      }

      id = R.id.httpCard;
      MaterialCardView httpCard = ViewBindings.findChildViewById(rootView, id);
      if (httpCard == null) {
        break missingId;
      }

      id = R.id.httpGetFailButton;
      MaterialButton httpGetFailButton = ViewBindings.findChildViewById(rootView, id);
      if (httpGetFailButton == null) {
        break missingId;
      }

      id = R.id.httpGetSuccessButton;
      MaterialButton httpGetSuccessButton = ViewBindings.findChildViewById(rootView, id);
      if (httpGetSuccessButton == null) {
        break missingId;
      }

      id = R.id.httpPostFailButton;
      MaterialButton httpPostFailButton = ViewBindings.findChildViewById(rootView, id);
      if (httpPostFailButton == null) {
        break missingId;
      }

      id = R.id.httpPostSuccessButton;
      MaterialButton httpPostSuccessButton = ViewBindings.findChildViewById(rootView, id);
      if (httpPostSuccessButton == null) {
        break missingId;
      }

      id = R.id.httpSectionTitle;
      TextView httpSectionTitle = ViewBindings.findChildViewById(rootView, id);
      if (httpSectionTitle == null) {
        break missingId;
      }

      id = R.id.multipartCard;
      MaterialCardView multipartCard = ViewBindings.findChildViewById(rootView, id);
      if (multipartCard == null) {
        break missingId;
      }

      id = R.id.multipartGetFailButton;
      MaterialButton multipartGetFailButton = ViewBindings.findChildViewById(rootView, id);
      if (multipartGetFailButton == null) {
        break missingId;
      }

      id = R.id.multipartGetSuccessButton;
      MaterialButton multipartGetSuccessButton = ViewBindings.findChildViewById(rootView, id);
      if (multipartGetSuccessButton == null) {
        break missingId;
      }

      id = R.id.multipartPostFailButton;
      MaterialButton multipartPostFailButton = ViewBindings.findChildViewById(rootView, id);
      if (multipartPostFailButton == null) {
        break missingId;
      }

      id = R.id.multipartPostSuccessButton;
      MaterialButton multipartPostSuccessButton = ViewBindings.findChildViewById(rootView, id);
      if (multipartPostSuccessButton == null) {
        break missingId;
      }

      id = R.id.multipartSectionTitle;
      TextView multipartSectionTitle = ViewBindings.findChildViewById(rootView, id);
      if (multipartSectionTitle == null) {
        break missingId;
      }

      id = R.id.statusCard;
      MaterialCardView statusCard = ViewBindings.findChildViewById(rootView, id);
      if (statusCard == null) {
        break missingId;
      }

      id = R.id.statusTextView;
      TextView statusTextView = ViewBindings.findChildViewById(rootView, id);
      if (statusTextView == null) {
        break missingId;
      }

      id = R.id.titleTextView;
      TextView titleTextView = ViewBindings.findChildViewById(rootView, id);
      if (titleTextView == null) {
        break missingId;
      }

      return new ActivityHitApisBinding((ScrollView) rootView, apiKeyTextView, backButton, dioCard,
          dioGetFailButton, dioGetSuccessButton, dioPostFailButton, dioPostSuccessButton,
          dioSectionTitle, graphqlCard, graphqlGetFailButton, graphqlGetSuccessButton,
          graphqlPostFailButton, graphqlPostSuccessButton, graphqlSectionTitle, headerBackground,
          httpCard, httpGetFailButton, httpGetSuccessButton, httpPostFailButton,
          httpPostSuccessButton, httpSectionTitle, multipartCard, multipartGetFailButton,
          multipartGetSuccessButton, multipartPostFailButton, multipartPostSuccessButton,
          multipartSectionTitle, statusCard, statusTextView, titleTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
