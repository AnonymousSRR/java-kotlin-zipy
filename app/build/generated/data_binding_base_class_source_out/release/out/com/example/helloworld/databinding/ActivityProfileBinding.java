// Generated by view binder compiler. Do not edit!
package com.example.helloworld.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.helloworld.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProfileBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialCardView accountSettingsCard;

  @NonNull
  public final TextView accountSettingsTitle;

  @NonNull
  public final MaterialCardView apiCallsCard;

  @NonNull
  public final MaterialButton backButton;

  @NonNull
  public final MaterialButton changePasswordButton;

  @NonNull
  public final MaterialButton editProfileButton;

  @NonNull
  public final TextView emailValue;

  @NonNull
  public final MaterialCardView errorsCard;

  @NonNull
  public final TextView fullNameValue;

  @NonNull
  public final View headerBackground;

  @NonNull
  public final MaterialCardView memberSinceCard;

  @NonNull
  public final MaterialCardView personalInfoCard;

  @NonNull
  public final TextView personalInfoTitle;

  @NonNull
  public final TextView profileEmailTextView;

  @NonNull
  public final TextView profileNameTextView;

  @NonNull
  public final MaterialCardView profilePictureCard;

  @NonNull
  public final LinearLayout quickActionsLayout;

  @NonNull
  public final TextView quickActionsTitle;

  @NonNull
  public final MaterialCardView recentActivityCard;

  @NonNull
  public final TextView recentActivityTitle;

  @NonNull
  public final MaterialCardView sessionsCard;

  @NonNull
  public final TextView statisticsTitle;

  @NonNull
  public final MaterialCardView uptimeCard;

  private ActivityProfileBinding(@NonNull ScrollView rootView,
      @NonNull MaterialCardView accountSettingsCard, @NonNull TextView accountSettingsTitle,
      @NonNull MaterialCardView apiCallsCard, @NonNull MaterialButton backButton,
      @NonNull MaterialButton changePasswordButton, @NonNull MaterialButton editProfileButton,
      @NonNull TextView emailValue, @NonNull MaterialCardView errorsCard,
      @NonNull TextView fullNameValue, @NonNull View headerBackground,
      @NonNull MaterialCardView memberSinceCard, @NonNull MaterialCardView personalInfoCard,
      @NonNull TextView personalInfoTitle, @NonNull TextView profileEmailTextView,
      @NonNull TextView profileNameTextView, @NonNull MaterialCardView profilePictureCard,
      @NonNull LinearLayout quickActionsLayout, @NonNull TextView quickActionsTitle,
      @NonNull MaterialCardView recentActivityCard, @NonNull TextView recentActivityTitle,
      @NonNull MaterialCardView sessionsCard, @NonNull TextView statisticsTitle,
      @NonNull MaterialCardView uptimeCard) {
    this.rootView = rootView;
    this.accountSettingsCard = accountSettingsCard;
    this.accountSettingsTitle = accountSettingsTitle;
    this.apiCallsCard = apiCallsCard;
    this.backButton = backButton;
    this.changePasswordButton = changePasswordButton;
    this.editProfileButton = editProfileButton;
    this.emailValue = emailValue;
    this.errorsCard = errorsCard;
    this.fullNameValue = fullNameValue;
    this.headerBackground = headerBackground;
    this.memberSinceCard = memberSinceCard;
    this.personalInfoCard = personalInfoCard;
    this.personalInfoTitle = personalInfoTitle;
    this.profileEmailTextView = profileEmailTextView;
    this.profileNameTextView = profileNameTextView;
    this.profilePictureCard = profilePictureCard;
    this.quickActionsLayout = quickActionsLayout;
    this.quickActionsTitle = quickActionsTitle;
    this.recentActivityCard = recentActivityCard;
    this.recentActivityTitle = recentActivityTitle;
    this.sessionsCard = sessionsCard;
    this.statisticsTitle = statisticsTitle;
    this.uptimeCard = uptimeCard;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accountSettingsCard;
      MaterialCardView accountSettingsCard = ViewBindings.findChildViewById(rootView, id);
      if (accountSettingsCard == null) {
        break missingId;
      }

      id = R.id.accountSettingsTitle;
      TextView accountSettingsTitle = ViewBindings.findChildViewById(rootView, id);
      if (accountSettingsTitle == null) {
        break missingId;
      }

      id = R.id.apiCallsCard;
      MaterialCardView apiCallsCard = ViewBindings.findChildViewById(rootView, id);
      if (apiCallsCard == null) {
        break missingId;
      }

      id = R.id.backButton;
      MaterialButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.changePasswordButton;
      MaterialButton changePasswordButton = ViewBindings.findChildViewById(rootView, id);
      if (changePasswordButton == null) {
        break missingId;
      }

      id = R.id.editProfileButton;
      MaterialButton editProfileButton = ViewBindings.findChildViewById(rootView, id);
      if (editProfileButton == null) {
        break missingId;
      }

      id = R.id.emailValue;
      TextView emailValue = ViewBindings.findChildViewById(rootView, id);
      if (emailValue == null) {
        break missingId;
      }

      id = R.id.errorsCard;
      MaterialCardView errorsCard = ViewBindings.findChildViewById(rootView, id);
      if (errorsCard == null) {
        break missingId;
      }

      id = R.id.fullNameValue;
      TextView fullNameValue = ViewBindings.findChildViewById(rootView, id);
      if (fullNameValue == null) {
        break missingId;
      }

      id = R.id.headerBackground;
      View headerBackground = ViewBindings.findChildViewById(rootView, id);
      if (headerBackground == null) {
        break missingId;
      }

      id = R.id.memberSinceCard;
      MaterialCardView memberSinceCard = ViewBindings.findChildViewById(rootView, id);
      if (memberSinceCard == null) {
        break missingId;
      }

      id = R.id.personalInfoCard;
      MaterialCardView personalInfoCard = ViewBindings.findChildViewById(rootView, id);
      if (personalInfoCard == null) {
        break missingId;
      }

      id = R.id.personalInfoTitle;
      TextView personalInfoTitle = ViewBindings.findChildViewById(rootView, id);
      if (personalInfoTitle == null) {
        break missingId;
      }

      id = R.id.profileEmailTextView;
      TextView profileEmailTextView = ViewBindings.findChildViewById(rootView, id);
      if (profileEmailTextView == null) {
        break missingId;
      }

      id = R.id.profileNameTextView;
      TextView profileNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (profileNameTextView == null) {
        break missingId;
      }

      id = R.id.profilePictureCard;
      MaterialCardView profilePictureCard = ViewBindings.findChildViewById(rootView, id);
      if (profilePictureCard == null) {
        break missingId;
      }

      id = R.id.quickActionsLayout;
      LinearLayout quickActionsLayout = ViewBindings.findChildViewById(rootView, id);
      if (quickActionsLayout == null) {
        break missingId;
      }

      id = R.id.quickActionsTitle;
      TextView quickActionsTitle = ViewBindings.findChildViewById(rootView, id);
      if (quickActionsTitle == null) {
        break missingId;
      }

      id = R.id.recentActivityCard;
      MaterialCardView recentActivityCard = ViewBindings.findChildViewById(rootView, id);
      if (recentActivityCard == null) {
        break missingId;
      }

      id = R.id.recentActivityTitle;
      TextView recentActivityTitle = ViewBindings.findChildViewById(rootView, id);
      if (recentActivityTitle == null) {
        break missingId;
      }

      id = R.id.sessionsCard;
      MaterialCardView sessionsCard = ViewBindings.findChildViewById(rootView, id);
      if (sessionsCard == null) {
        break missingId;
      }

      id = R.id.statisticsTitle;
      TextView statisticsTitle = ViewBindings.findChildViewById(rootView, id);
      if (statisticsTitle == null) {
        break missingId;
      }

      id = R.id.uptimeCard;
      MaterialCardView uptimeCard = ViewBindings.findChildViewById(rootView, id);
      if (uptimeCard == null) {
        break missingId;
      }

      return new ActivityProfileBinding((ScrollView) rootView, accountSettingsCard,
          accountSettingsTitle, apiCallsCard, backButton, changePasswordButton, editProfileButton,
          emailValue, errorsCard, fullNameValue, headerBackground, memberSinceCard,
          personalInfoCard, personalInfoTitle, profileEmailTextView, profileNameTextView,
          profilePictureCard, quickActionsLayout, quickActionsTitle, recentActivityCard,
          recentActivityTitle, sessionsCard, statisticsTitle, uptimeCard);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
