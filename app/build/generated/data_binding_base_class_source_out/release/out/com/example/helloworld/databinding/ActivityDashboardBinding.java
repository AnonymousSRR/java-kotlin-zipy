// Generated by view binder compiler. Do not edit!
package com.example.helloworld.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.helloworld.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDashboardBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton animationsButton;

  @NonNull
  public final MaterialButton anrCrashButton;

  @NonNull
  public final MaterialButton appHideButton;

  @NonNull
  public final MaterialButton controlsButton;

  @NonNull
  public final MaterialButton dragDropButton;

  @NonNull
  public final TextView featuresTitleTextView;

  @NonNull
  public final MaterialButton generateErrorsButton;

  @NonNull
  public final MaterialButton hitApisButton;

  @NonNull
  public final MaterialButton logoutButton;

  @NonNull
  public final MaterialButton miniGameButton;

  @NonNull
  public final MaterialButton myProfileButton;

  @NonNull
  public final MaterialButton payButton;

  @NonNull
  public final MaterialButton scrollButton;

  @NonNull
  public final MaterialButton settingsButton;

  @NonNull
  public final TextView userDetailsTextView;

  @NonNull
  public final TextView userInfoTextView;

  @NonNull
  public final TextView welcomeMessageTextView;

  @NonNull
  public final TextView welcomeTitleTextView;

  private ActivityDashboardBinding(@NonNull ScrollView rootView,
      @NonNull MaterialButton animationsButton, @NonNull MaterialButton anrCrashButton,
      @NonNull MaterialButton appHideButton, @NonNull MaterialButton controlsButton,
      @NonNull MaterialButton dragDropButton, @NonNull TextView featuresTitleTextView,
      @NonNull MaterialButton generateErrorsButton, @NonNull MaterialButton hitApisButton,
      @NonNull MaterialButton logoutButton, @NonNull MaterialButton miniGameButton,
      @NonNull MaterialButton myProfileButton, @NonNull MaterialButton payButton,
      @NonNull MaterialButton scrollButton, @NonNull MaterialButton settingsButton,
      @NonNull TextView userDetailsTextView, @NonNull TextView userInfoTextView,
      @NonNull TextView welcomeMessageTextView, @NonNull TextView welcomeTitleTextView) {
    this.rootView = rootView;
    this.animationsButton = animationsButton;
    this.anrCrashButton = anrCrashButton;
    this.appHideButton = appHideButton;
    this.controlsButton = controlsButton;
    this.dragDropButton = dragDropButton;
    this.featuresTitleTextView = featuresTitleTextView;
    this.generateErrorsButton = generateErrorsButton;
    this.hitApisButton = hitApisButton;
    this.logoutButton = logoutButton;
    this.miniGameButton = miniGameButton;
    this.myProfileButton = myProfileButton;
    this.payButton = payButton;
    this.scrollButton = scrollButton;
    this.settingsButton = settingsButton;
    this.userDetailsTextView = userDetailsTextView;
    this.userInfoTextView = userInfoTextView;
    this.welcomeMessageTextView = welcomeMessageTextView;
    this.welcomeTitleTextView = welcomeTitleTextView;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.animationsButton;
      MaterialButton animationsButton = ViewBindings.findChildViewById(rootView, id);
      if (animationsButton == null) {
        break missingId;
      }

      id = R.id.anrCrashButton;
      MaterialButton anrCrashButton = ViewBindings.findChildViewById(rootView, id);
      if (anrCrashButton == null) {
        break missingId;
      }

      id = R.id.appHideButton;
      MaterialButton appHideButton = ViewBindings.findChildViewById(rootView, id);
      if (appHideButton == null) {
        break missingId;
      }

      id = R.id.controlsButton;
      MaterialButton controlsButton = ViewBindings.findChildViewById(rootView, id);
      if (controlsButton == null) {
        break missingId;
      }

      id = R.id.dragDropButton;
      MaterialButton dragDropButton = ViewBindings.findChildViewById(rootView, id);
      if (dragDropButton == null) {
        break missingId;
      }

      id = R.id.featuresTitleTextView;
      TextView featuresTitleTextView = ViewBindings.findChildViewById(rootView, id);
      if (featuresTitleTextView == null) {
        break missingId;
      }

      id = R.id.generateErrorsButton;
      MaterialButton generateErrorsButton = ViewBindings.findChildViewById(rootView, id);
      if (generateErrorsButton == null) {
        break missingId;
      }

      id = R.id.hitApisButton;
      MaterialButton hitApisButton = ViewBindings.findChildViewById(rootView, id);
      if (hitApisButton == null) {
        break missingId;
      }

      id = R.id.logoutButton;
      MaterialButton logoutButton = ViewBindings.findChildViewById(rootView, id);
      if (logoutButton == null) {
        break missingId;
      }

      id = R.id.miniGameButton;
      MaterialButton miniGameButton = ViewBindings.findChildViewById(rootView, id);
      if (miniGameButton == null) {
        break missingId;
      }

      id = R.id.myProfileButton;
      MaterialButton myProfileButton = ViewBindings.findChildViewById(rootView, id);
      if (myProfileButton == null) {
        break missingId;
      }

      id = R.id.payButton;
      MaterialButton payButton = ViewBindings.findChildViewById(rootView, id);
      if (payButton == null) {
        break missingId;
      }

      id = R.id.scrollButton;
      MaterialButton scrollButton = ViewBindings.findChildViewById(rootView, id);
      if (scrollButton == null) {
        break missingId;
      }

      id = R.id.settingsButton;
      MaterialButton settingsButton = ViewBindings.findChildViewById(rootView, id);
      if (settingsButton == null) {
        break missingId;
      }

      id = R.id.userDetailsTextView;
      TextView userDetailsTextView = ViewBindings.findChildViewById(rootView, id);
      if (userDetailsTextView == null) {
        break missingId;
      }

      id = R.id.userInfoTextView;
      TextView userInfoTextView = ViewBindings.findChildViewById(rootView, id);
      if (userInfoTextView == null) {
        break missingId;
      }

      id = R.id.welcomeMessageTextView;
      TextView welcomeMessageTextView = ViewBindings.findChildViewById(rootView, id);
      if (welcomeMessageTextView == null) {
        break missingId;
      }

      id = R.id.welcomeTitleTextView;
      TextView welcomeTitleTextView = ViewBindings.findChildViewById(rootView, id);
      if (welcomeTitleTextView == null) {
        break missingId;
      }

      return new ActivityDashboardBinding((ScrollView) rootView, animationsButton, anrCrashButton,
          appHideButton, controlsButton, dragDropButton, featuresTitleTextView,
          generateErrorsButton, hitApisButton, logoutButton, miniGameButton, myProfileButton,
          payButton, scrollButton, settingsButton, userDetailsTextView, userInfoTextView,
          welcomeMessageTextView, welcomeTitleTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
